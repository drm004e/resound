//   
//   Copyright (c) 2007 David Moore, James Mooney, All Rights Reserved.
//   
//   This program is free software; you can redistribute it and/or
//   modify it under the terms of the GNU General Public License as
//   published by the Free Software Foundation; either version 2 of
//   the License, or (at your option) any later version.
//   
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//   GNU General Public License for more details.
//   
//   You should have received a copy of the GNU General Public License
//   along with this program; if not, write to the Free Software
//   Foundation, Inc., 59 Temple Place, Suite 330, Boston,
//   MA 02111-1307 USA
//   
// Class automatically generated by Dev-C++ New Class wizard

#ifndef SA_SYSTEMLOG_H
#define SA_SYSTEMLOG_H

namespace SA
{

// Logging System
class SystemLog
{
private:
	// class constructor
	SystemLog();
	// class destructor
	~SystemLog();

	static SystemLog* singleton;

	wxFFileOutputStream fileStream;

	wxTextOutputStream textStream;

public:
	/// Gets the SystemLog singleton
	static SystemLog& GetSingleton();
	static void Destroy();
	wxTextOutputStream& GetStream();

};
/// Gets the Global SystemLog output stream
inline wxTextOutputStream& SYSTEM_LOG_STREAM()
{
	SystemLog::GetSingleton().GetStream();
};

} // namespace SA

#define cout SYSTEM_LOG_STREAM()
#define cerr SYSTEM_LOG_STREAM()

#ifdef _RSDEBUG
    #define DEBUG_TRACE(a) SA::SYSTEM_LOG_STREAM() << a << _T("\n")
    #define DEBUG_TRACE2(a,b) SA::SYSTEM_LOG_STREAM() << a << b << _T("\n")
    #define DEBUG_TRACE3(a,b,c) SA::SYSTEM_LOG_STREAM() << a << b << c << _T("\n")
    #define DEBUG_TRACE4(a,b,c,d) SA::SYSTEM_LOG_STREAM() << a << b << c << d << _T("\n")
#else
    #define DEBUG_TRACE(a)
    #define DEBUG_TRACE2(a,b)
    #define DEBUG_TRACE3(a,b,c)
    #define DEBUG_TRACE4(a,b,c,d)
#endif // _RSDEBUG

#endif // SA_SYSTEMLOG_H

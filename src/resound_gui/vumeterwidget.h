//   
//   Copyright (c) 2007 David Moore, James Mooney, All Rights Reserved.
//   
//   This program is free software; you can redistribute it and/or
//   modify it under the terms of the GNU General Public License as
//   published by the Free Software Foundation; either version 2 of
//   the License, or (at your option) any later version.
//   
//   This program is distributed in the hope that it will be useful,
//   but WITHOUT ANY WARRANTY; without even the implied warranty of
//   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//   GNU General Public License for more details.
//   
//   You should have received a copy of the GNU General Public License
//   along with this program; if not, write to the Free Software
//   Foundation, Inc., 59 Temple Place, Suite 330, Boston,
//   MA 02111-1307 USA
//   
// Class automatically generated by Dev-C++ New Class wizard

#ifndef VUMETER_H
#define VUMETER_H

#include "pch.h" // precompiler header

#include "util.h"
#include "automation.h"
#include "pvar.h"

namespace Resound
{

// A Vu meter class for use with audio programs
class StaticVUMeterWidget  : public wxControl
{
public:
	// class constructor
	StaticVUMeterWidget(wxWindow *parent,int id,int _val, int _min, int _max,
	                    wxString offFilename = _(RESOURCE_DIR "/image/meterOff.png"),
	                    wxString onFilename = _(RESOURCE_DIR "/image/meterOn.png"));
	// class destructor
	~StaticVUMeterWidget();

	void SetValue(int _val);
	void SetRange(int _min, int _max);



protected:

	// bimap related
	wxBitmap bmMeterOff;
	wxBitmap bmMeterOn;
	wxMemoryDC dcMeterOff;
	wxMemoryDC dcMeterOn;
	int sizeX;
	int sizeY; // bitmap size

	// meter value
	int val;
	int min, max;


	// events handled
	void OnPaint(wxPaintEvent& event);
	// event handling macro
	DECLARE_EVENT_TABLE()

};

// automated vu type meter with
// gradual decay
class VUMeterWidget  : public StaticVUMeterWidget, public AutomatedObject
{
public:
	// class constructor
	VUMeterWidget(wxWindow *parent,int id,int _val, int _min, int _max,
	              wxString offFilename = _(RESOURCE_DIR "/image/meterOff.png"),
	              wxString onFilename = _(RESOURCE_DIR "/image/meterOn.png"));
	void tick(float dT); // time elapsed function for decay
};

// automated vu type meter that background peeks at values in a ParameterLink
class ParameterVUMeterWidget  : public StaticVUMeterWidget, public AutomatedObject
{
public:
	// class constructor
	ParameterVUMeterWidget(wxWindow *parent,int id,int _val, int _min, int _max,
	                  wxString offFilename = _(RESOURCE_DIR "/image/meterOff.png"),
	                  wxString onFilename = _(RESOURCE_DIR "/image/meterOn.png"));
	void tick(float dT); // time elapsed function for decay
	void SetTarget(ParameterAddress addr);
private:
	ParameterLink target;
};

}
#endif // VUMETER_H
